knitr::opts_chunk$set( echo = TRUE, message=F, warning=F, fig.width=10 )
library( dplyr )
library( pander )
df <-
df.sample %>%
standardize_df() %>%
remove_dates() %>%
standardize_conj() %>%   # condition has length > 1
split_titles() %>%
standardize_spelling() %>%   # condition has length > 1
gen_status_codes() %>%
standardize_titles() %>%
categorize_titles()
library( titleclassifier )
df <-
df.sample %>%
standardize_df() %>%
remove_dates() %>%
standardize_conj() %>%   # condition has length > 1
split_titles() %>%
standardize_spelling() %>%   # condition has length > 1
gen_status_codes() %>%
standardize_titles() %>%
categorize_titles()
set.seed( 1234 )
df.sample <- sample_n( titleclassifier::tinypartvii, 100 )
df <-
df.sample %>%
standardize_df() %>%
remove_dates() %>%
standardize_conj() %>%   # condition has length > 1
split_titles() %>%
standardize_spelling() %>%   # condition has length > 1
gen_status_codes() %>%
standardize_titles() %>%
categorize_titles()
na_to_space <- function(x)
{
x[ is.na(x) ] <- ""
return(x)
}
reorder_df <- function( df )
{
new.order <-
c("F9_07_COMP_DTK_NAME_PERS", "TITLE_RAW","TOT.HOURS", "TOT.COMP",
"title.standard", "TitleTxt6", "TitleTxt5",
"TitleTxt4",  "TitleTxt3", "TitleTxt2",
"OBJECT_ID", "EIN", "NAME",
"TAXYR", "FORMTYPE", "URL", "F9_07_COMP_DTK_TITLE",
"F9_07_COMP_DTK_AVE_HOUR_WEEK", "F9_07_COMP_DTK_AVE_HOUR_WEEK_RL",
"F9_07_COMP_DTK_POS_INDIV_TRUST_X", "F9_07_COMP_DTK_POS_OFF_X",
"F9_07_COMP_DTK_COMP_ORG", "F9_07_COMP_DTK_COMP_RLTD", "F9_07_COMP_DTK_COMP_OTH",
"F9_07_COMP_DTK_POS_KEY_EMPL_X", "F9_07_COMP_DTK_POS_INST_TRUST_X",
"F9_07_COMP_DTK_POS_HIGH_COMP_X", "F9_07_COMP_DTK_EMPL_BEN",
"F9_07_COMP_DTK_POS_FORMER_X",
"date.x",  "Num.Title", "SCHED.O", "SCHED.AT.LARGE", "AS.NEEDED", "EX.OFFICIO",
"CO", "REGIONAL", "FUTURE", "FORMER", "INTERIM", "domain.category",
"domainl.label", "soc.label", "major.group", "minor.group", "broad.group",
"detailed.occupation", "emp", "ceo", "c.level", "dir.vp", "mgr",
"spec", "board", "pres", "vp", "sec", "treas", "com")
df <-
df[ new.order ] %>%
rename( PNAME = F9_07_COMP_DTK_NAME_PERS ) %>%
arrange( -TOT.HOURS, EIN, TITLE_RAW ) # %>%
# mutate( domain.category = na_to_space( domain.category ),
#         domainl.label = na_to_space( domainl.label ),
#         soc.label = na_to_space( soc.label ),
#         major.group = na_to_space( major.group ),
#         minor.group = na_to_space( minor.group ),
#         broad.group = na_to_space( broad.group ),
#         detailed.occupation = na_to_space( detailed.occupation ),
#         emp = na_to_space( emp ),
#         ceo = na_to_space( ceo ),
#         c.level = na_to_space( c.level ),
#         dir.vp = na_to_space( dir.vp ),
#         mgr = na_to_space( mgr ),
#         spec = na_to_space( spec ),
#         board = na_to_space( board ),
#         pres = na_to_space( pres ),
#         vp = na_to_space( vp ),
#         sec = na_to_space( sec ),
#         treas = na_to_space( treas ),
#         com = na_to_space( com ) )
df$REGIONAL <- as.numeric( df$REGIONAL)
df$FUTURE <- as.numeric( df$FUTURE )
df$FORMER <- as.numeric( df$FORMER )
df$INTERIM <- as.numeric( df$INTERIM )
return( df )
}
head( df )
df <- reorder_df( df )
new.order <-
c("F9_07_COMP_DTK_NAME_PERS", "TITLE_RAW","TOT.HOURS", "TOT.COMP",
"title.standard", "TitleTxt6", "TitleTxt5",
"TitleTxt4",  "TitleTxt3", "TitleTxt2",
"OBJECT_ID", "EIN", "NAME",
"TAXYR", "FORMTYPE", "URL", "F9_07_COMP_DTK_TITLE",
"F9_07_COMP_DTK_AVE_HOUR_WEEK", "F9_07_COMP_DTK_AVE_HOUR_WEEK_RL",
"F9_07_COMP_DTK_POS_INDIV_TRUST_X", "F9_07_COMP_DTK_POS_OFF_X",
"F9_07_COMP_DTK_COMP_ORG", "F9_07_COMP_DTK_COMP_RLTD", "F9_07_COMP_DTK_COMP_OTH",
"F9_07_COMP_DTK_POS_KEY_EMPL_X", "F9_07_COMP_DTK_POS_INST_TRUST_X",
"F9_07_COMP_DTK_POS_HIGH_COMP_X", "F9_07_COMP_DTK_EMPL_BEN",
"F9_07_COMP_DTK_POS_FORMER_X",
"date.x",  "Num.Title", "SCHED.O", "SCHED.AT.LARGE", "AS.NEEDED", "EX.OFFICIO",
"CO", "REGIONAL", "FUTURE", "FORMER", "INTERIM", "domain.category",
"domainl.label", "soc.label", "major.group", "minor.group", "broad.group",
"detailed.occupation", "emp", "ceo", "c.level", "dir.vp", "mgr",
"spec", "board", "pres", "vp", "sec", "treas", "com")
setdiff( names(df), new.order )
setdiff( new.order, names(df) )
na_to_space <- function(x)
{
x[ is.na(x) ] <- ""
return(x)
}
reorder_df <- function( df )
{
new.order <-
c("F9_07_COMP_DTK_NAME_PERS", "TITLE_RAW","TOT.HOURS", "TOT.COMP",
"title.standard", "TitleTxt6", "TitleTxt5",
"TitleTxt4",  "TitleTxt3", "TitleTxt2",
"OBJECT_ID", "EIN", "NAME",
"TAXYR", "FORMTYPE", "URL", "F9_07_COMP_DTK_TITLE",
"F9_07_COMP_DTK_AVE_HOUR_WEEK", "F9_07_COMP_DTK_AVE_HOUR_WEEK_RL",
"F9_07_COMP_DTK_POS_INDIV_TRUST_X", "F9_07_COMP_DTK_POS_OFF_X",
"F9_07_COMP_DTK_COMP_ORG", "F9_07_COMP_DTK_COMP_RLTD", "F9_07_COMP_DTK_COMP_OTH",
"F9_07_COMP_DTK_POS_KEY_EMPL_X", "F9_07_COMP_DTK_POS_INST_TRUST_X",
"F9_07_COMP_DTK_POS_HIGH_COMP_X", "F9_07_COMP_DTK_EMPL_BEN",
"F9_07_COMP_DTK_POS_FORMER_X",
"date.x",  "Num.Titles", "SCHED.O", "SCHED.AT.LARGE", "AS.NEEDED", "EX.OFFICIO",
"CO", "REGIONAL", "FUTURE", "FORMER", "INTERIM", "domain.category",
"domainl.label", "soc.label", "major.group", "minor.group", "broad.group",
"detailed.occupation", "emp", "ceo", "c.level", "dir.vp", "mgr",
"spec", "board", "pres", "vp", "sec", "treas", "com")
df <-
df[ new.order ] %>%
rename( PNAME = F9_07_COMP_DTK_NAME_PERS ) %>%
arrange( -TOT.HOURS, EIN, TITLE_RAW ) # %>%
# mutate( domain.category = na_to_space( domain.category ),
#         domainl.label = na_to_space( domainl.label ),
#         soc.label = na_to_space( soc.label ),
#         major.group = na_to_space( major.group ),
#         minor.group = na_to_space( minor.group ),
#         broad.group = na_to_space( broad.group ),
#         detailed.occupation = na_to_space( detailed.occupation ),
#         emp = na_to_space( emp ),
#         ceo = na_to_space( ceo ),
#         c.level = na_to_space( c.level ),
#         dir.vp = na_to_space( dir.vp ),
#         mgr = na_to_space( mgr ),
#         spec = na_to_space( spec ),
#         board = na_to_space( board ),
#         pres = na_to_space( pres ),
#         vp = na_to_space( vp ),
#         sec = na_to_space( sec ),
#         treas = na_to_space( treas ),
#         com = na_to_space( com ) )
df$REGIONAL <- as.numeric( df$REGIONAL)
df$FUTURE <- as.numeric( df$FUTURE )
df$FORMER <- as.numeric( df$FORMER )
df$INTERIM <- as.numeric( df$INTERIM )
return( df )
}
df <- reorder_df( df )
df
# df[ df$F9_07_COMP_DTK_NAME_PERS == "Pat L Wheeler" , ]
# These need to be unique otherwise duplicates columns
# PRESIDENT --> CEO
# PRESIDENT --> BOARD PRESIDENT
googlesheets4::gs4_deauth()
df.standard <- googlesheets4::read_sheet( "1iYEY2HYDZTV0uvu35UuwdgAUQNKXSyab260pPPutP1M",
sheet="title-standardization", range="A:B",
col_types = "c" )  # c = character
length( df.standard$title.variant )
length( unique( df.standard$title.variant ))
nrow( df.standard )
# [1] 713
df.standard <- unique( df.standard )
nrow( df.standard )
# [1] 696
# PROBLEM CASES
df.standard %>%
group_by( title.variant ) %>%
filter( n() > 1 ) %>%
arrange( title.variant )
keep <- c("PNAME", "TOT.HOURS", "TOT.COMP", "TITLE_RAW",
"title.standard", "TitleTxt6", "TitleTxt5" )
df[ is.na( df$title.standard) , keep ]
df2 <- df[ is.na( df$title.standard) , keep ]
df2$TitleTxt6
is.na( df$title.standard)
keep <- c("PNAME", "TOT.HOURS", "TOT.COMP", "TITLE_RAW",
"title.standard", "TitleTxt6", "TitleTxt5" )
setdiff( keep, names(df) )
intersect( names(df), keep )
class(df)
dim(df)
length( is.na( df$title.standard) )
keep <- c("PNAME", "TOT.HOURS", "TOT.COMP", "TITLE_RAW",
"title.standard", "TitleTxt6", "TitleTxt5" )
df[ is.na( df$title.standard) , keep ]
df2 <- df[ is.na( df$title.standard) , keep ]
df2$TitleTxt6
# create sample of 100 observations for testing
set.seed( 1234 )
df.sample <- sample_n( titleclassifier::tinypartvii, 100 )
df <-
df.sample %>%
standardize_df() %>%
remove_dates() %>%
standardize_conj() %>%   # condition has length > 1
split_titles() %>%
standardize_spelling() %>%   # condition has length > 1
gen_status_codes() %>%
standardize_titles() %>%
categorize_titles()
df <- reorder_df( df )
df
keep <- c("PNAME", "TOT.HOURS", "TOT.COMP", "TITLE_RAW",
"title.standard", "TitleTxt6", "TitleTxt5" )
df[ is.na( df$title.standard) , keep ]
df <- lapply( df, as.character )
keep <- c("PNAME", "TOT.HOURS", "TOT.COMP", "TITLE_RAW",
"title.standard", "TitleTxt6", "TitleTxt5" )
df[ is.na( df$title.standard) , keep ]
class( df )
# create sample of 100 observations for testing
set.seed( 1234 )
df.sample <- sample_n( titleclassifier::tinypartvii, 100 )
df <-
df.sample %>%
standardize_df() %>%
remove_dates() %>%
standardize_conj() %>%   # condition has length > 1
split_titles() %>%
standardize_spelling() %>%   # condition has length > 1
gen_status_codes() %>%
standardize_titles() %>%
categorize_titles()
df <- reorder_df( df )
df
df <- lapply( df, as.character ) %>% as.data.frame()
keep <- c("PNAME", "TOT.HOURS", "TOT.COMP", "TITLE_RAW",
"title.standard", "TitleTxt6", "TitleTxt5" )
df[ is.na( df$title.standard) , keep ]
df <-
df.sample %>%
standardize_df() %>%
remove_dates()
paste0( df$TITLE_RAW, " --> ", df$TitleTxt2 ) %>% pander()
paste0( df$TITLE_RAW, " --> ", df$TitleTxt2 ) %>% knitr::kable()
paste0( df$TITLE_RAW, "    -->    ", df$TitleTxt2 ) %>% knitr::kable()
df[ c("TITLE_RAW","TitleTxt2","TitleTxt3") ]  %>% knitr::kable()
df <-
df.sample %>%
standardize_df() %>%
remove_dates() %>%
standardize_conj()
df[ c("TITLE_RAW","TitleTxt2","TitleTxt3") ]  %>% knitr::kable()
df <-
df.sample %>%
standardize_df() %>%
remove_dates() %>%
standardize_conj() %>%
split_titles()
df[ c("F9_07_COMP_DTK_NAME_PERS","Num.Titles","TITLE_RAW","TitleTxt3","TitleTxt4") ] %>%
dplyr::rename( PNAME = F9_07_COMP_DTK_NAME_PERS ) %>%
group_by( PNAME ) %>%
mutate( N=max(Num.Title) ) %>%
dplyr::arrange( desc(N), PNAME )
df <-
df.sample %>%
standardize_df() %>%
remove_dates() %>%
standardize_conj() %>%
split_titles()
df[ c("F9_07_COMP_DTK_NAME_PERS","Num.Titles","TITLE_RAW","TitleTxt3","TitleTxt4") ] %>%
dplyr::rename( PNAME = F9_07_COMP_DTK_NAME_PERS ) %>%
group_by( PNAME ) %>%
mutate( N=max(Num.Titles) ) %>%
dplyr::arrange( desc(N), PNAME )
knitr::opts_chunk$set( echo = TRUE, message=F, warning=F, fig.width=10 )
library( dplyr )
library( pander )
library( titleclassifier )
googlesheets4::gs4_deauth()
df.standard <- googlesheets4::read_sheet( "1iYEY2HYDZTV0uvu35UuwdgAUQNKXSyab260pPPutP1M",
sheet="title-standardization", range="A:B",
col_types = "c" )  # c = character
df.standard
df.standard %>% knitr::kable()
df.standard %>% pander()
head( df.standard )
df.standard %>%
select( title.standard, title.variant ) %>%
group_by( title.standard ) %>%
mutate( instances=n() ) %>%
arrange( title.standard ) %>%
pander()
df.standard %>%
select( title.standard, title.variant ) %>%
group_by( title.standard ) %>%
mutate( variants=n() ) %>%
arrange( n, title.standard ) %>%
pander()
df.standard %>%
select( title.standard, title.variant ) %>%
group_by( title.standard ) %>%
mutate( variants=n() ) %>%
arrange( variants, title.standard ) %>%
pander()
df.standard %>%
select( title.standard, title.variant ) %>%
group_by( title.standard ) %>%
mutate( variants=n() ) %>%
arrange( -variants, title.standard ) %>%
pander()
df.status <- googlesheets4::read_sheet( "1iYEY2HYDZTV0uvu35UuwdgAUQNKXSyab260pPPutP1M",
sheet="status-codes", range="A:B",
col_types = "c" )  # c = character
head( df.status )
df.status <- googlesheets4::read_sheet( "1iYEY2HYDZTV0uvu35UuwdgAUQNKXSyab260pPPutP1M",
sheet="status-codes", range="A:B",
col_types = "c" )  # c = character
head( df.status )
table( df.status$status.qualifier )
head( df.status )
table( df.status$status.qualifier )
